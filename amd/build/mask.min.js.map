{"version":3,"sources":["../src/mask.js"],"names":["define","$","Mask","el","mask","options","p","invalid","getCaret","sel","pos","ctrl","get","dSel","document","selection","cSelStart","selectionStart","navigator","appVersion","indexOf","createRange","moveStart","val","length","text","e","setCaret","is","range","setSelectionRange","createTextRange","collapse","moveEnd","select","events","on","data","keyCode","which","maskDigitPosMapOld","maskDigitPosMap","behaviour","setTimeout","keydown","keyup","oldValue","trigger","selectOnFocus","target","clearIfNotMatch","destroyEvents","off","v","isInput","method","r","arguments","calculateCaretPosition","oldVal","newVal","getMasked","caretPosNew","caretPosOld","newValL","oldValL","maskDigitsBeforeCaret","maskDigitsAfterCaret","maskDigitsBeforeCaretAll","maskDigitsBeforeCaretAllOld","i","caretPos","window","event","inArray","jMask","byPassKeys","jMaskGlobals","keyStrokeCompensation","callbacks","skipMaskChars","buf","value","m","maskLen","valLen","offset","addMethod","resetPos","maskDigitCount","maskDigitPosArr","lastMaskChar","check","reverse","lastUntranslatedMaskChar","maskDigit","charAt","valDigit","translation","match","pattern","recursive","optional","fallback","push","lastMaskCharDigit","join","mapMaskdigitPositions","maskDiff","changed","defaultArgs","callback","name","criteria","args","apply","remove","caret","placeholder","removeAttr","getCleanVal","getMaskedVal","init","onlyMask","extend","attr","maxlength"],"mappings":"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","sourcesContent":["/*!\n* jquery.mask.js https://github.com/igorescobar/jQuery-Mask-Plugin\n* A jQuery Plugin to make masks on form fields and HTML elements.\n* Adapted to Moodle AMD Modules by @willianmano\n*\n* @version 1.14.16\n* @author Igor Escobar\n* @license: MIT\n*/\n\ndefine(['jquery'], function($) {\n    var Mask = function (el, mask, options) {\n        var p = {\n            invalid: [],\n            getCaret: function () {\n                try {\n                    var sel,\n                        pos = 0,\n                        ctrl = el.get(0),\n                        dSel = document.selection,\n                        cSelStart = ctrl.selectionStart;\n\n                    // IE Support\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\n                        sel = dSel.createRange();\n                        sel.moveStart('character', -p.val().length);\n                        pos = sel.text.length;\n                    }\n                    // Firefox support\n                    else if (cSelStart || cSelStart === '0') {\n                        pos = cSelStart;\n                    }\n\n                    return pos;\n                } catch (e) {}\n            },\n            setCaret: function(pos) {\n                try {\n                    if (el.is(':focus')) {\n                        var range, ctrl = el.get(0);\n\n                        // Firefox, WebKit, etc..\n                        if (ctrl.setSelectionRange) {\n                            ctrl.setSelectionRange(pos, pos);\n                        } else { // IE\n                            range = ctrl.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd('character', pos);\n                            range.moveStart('character', pos);\n                            range.select();\n                        }\n                    }\n                } catch (e) {}\n            },\n            events: function() {\n                el\n                    .on('keydown.mask', function(e) {\n                        el.data('mask-keycode', e.keyCode || e.which);\n                        el.data('mask-previus-value', el.val());\n                        el.data('mask-previus-caret-pos', p.getCaret());\n                        p.maskDigitPosMapOld = p.maskDigitPosMap;\n                    })\n                    .on('keyup.mask', p.behaviour)\n                    .on('paste.mask drop.mask', function() {\n                        setTimeout(function() {\n                            el.keydown().keyup();\n                        }, 100);\n                    })\n                    .on('change.mask', function(){\n                        el.data('changed', true);\n                    })\n                    .on('blur.mask', function(){\n                        if (oldValue !== p.val() && !el.data('changed')) {\n                            el.trigger('change');\n                        }\n                        el.data('changed', false);\n                    })\n                    // it's very important that this callback remains in this position\n                    // otherwhise oldValue it's going to work buggy\n                    .on('blur.mask', function() {\n                        oldValue = p.val();\n                    })\n                    // select all text on focus\n                    .on('focus.mask', function (e) {\n                        if (options.selectOnFocus === true) {\n                            $(e.target).select();\n                        }\n                    })\n                    // clear the value if it not complete the mask\n                    .on('focusout.mask', function() {\n                        if (options.clearIfNotMatch) {\n                            p.val('');\n                        }\n                    });\n            },\n            destroyEvents: function() {\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\n            },\n            val: function(v) {\n                var isInput = el.is('input'),\n                    method = isInput ? 'val' : 'text',\n                    r;\n\n                if (arguments.length > 0) {\n                    if (el[method]() !== v) {\n                        el[method](v);\n                    }\n                    r = el;\n                } else {\n                    r = el[method]();\n                }\n\n                return r;\n            },\n            calculateCaretPosition: function(oldVal) {\n                var newVal = p.getMasked(),\n                    caretPosNew = p.getCaret();\n                if (oldVal !== newVal) {\n                    var caretPosOld = el.data('mask-previus-caret-pos') || 0,\n                        newValL = newVal.length,\n                        oldValL = oldVal.length,\n                        maskDigitsBeforeCaret = 0,\n                        maskDigitsAfterCaret = 0,\n                        maskDigitsBeforeCaretAll = 0,\n                        maskDigitsBeforeCaretAllOld = 0,\n                        i = 0;\n\n                    for (i = caretPosNew; i < newValL; i++) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsAfterCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsBeforeCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMap[i]) {\n                            maskDigitsBeforeCaretAll++;\n                        }\n                    }\n\n                    for (i = caretPosOld - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMapOld[i]) {\n                            maskDigitsBeforeCaretAllOld++;\n                        }\n                    }\n\n                    // if the cursor is at the end keep it there\n                    if (caretPosNew > oldValL) {\n                        caretPosNew = newValL * 10;\n                    } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {\n                        if (!p.maskDigitPosMapOld[caretPosNew])  {\n                            var caretPos = caretPosNew;\n                            caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;\n                            caretPosNew -= maskDigitsBeforeCaret;\n                            if (p.maskDigitPosMap[caretPosNew])  {\n                                caretPosNew = caretPos;\n                            }\n                        }\n                    }\n                    else if (caretPosNew > caretPosOld) {\n                        caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;\n                        caretPosNew += maskDigitsAfterCaret;\n                    }\n                }\n                return caretPosNew;\n            },\n            behaviour: function(e) {\n                e = e || window.event;\n                p.invalid = [];\n\n                var keyCode = el.data('mask-keycode');\n\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\n                    var newVal = p.getMasked(),\n                        caretPos = p.getCaret(),\n                        oldVal = el.data('mask-previus-value') || '';\n\n                    // this is a compensation to devices/browsers that don't compensate\n                    // caret positioning the right way\n                    setTimeout(function() {\n                        p.setCaret(p.calculateCaretPosition(oldVal));\n                    }, $.jMaskGlobals.keyStrokeCompensation);\n\n                    p.val(newVal);\n                    p.setCaret(caretPos);\n                    return p.callbacks(e);\n                }\n            },\n            getMasked: function(skipMaskChars, val) {\n                var buf = [],\n                    value = val === undefined ? p.val() : val + '',\n                    m = 0, maskLen = mask.length,\n                    v = 0, valLen = value.length,\n                    offset = 1, addMethod = 'push',\n                    resetPos = -1,\n                    maskDigitCount = 0,\n                    maskDigitPosArr = [],\n                    lastMaskChar,\n                    check;\n\n                if (options.reverse) {\n                    addMethod = 'unshift';\n                    offset = -1;\n                    lastMaskChar = 0;\n                    m = maskLen - 1;\n                    v = valLen - 1;\n                    check = function () {\n                        return m > -1 && v > -1;\n                    };\n                } else {\n                    lastMaskChar = maskLen - 1;\n                    check = function () {\n                        return m < maskLen && v < valLen;\n                    };\n                }\n\n                var lastUntranslatedMaskChar;\n                while (check()) {\n                    var maskDigit = mask.charAt(m),\n                        valDigit = value.charAt(v),\n                        translation = jMask.translation[maskDigit];\n\n                    if (translation) {\n                        if (valDigit.match(translation.pattern)) {\n                            buf[addMethod](valDigit);\n                            if (translation.recursive) {\n                                if (resetPos === -1) {\n                                    resetPos = m;\n                                } else if (m === lastMaskChar && m !== resetPos) {\n                                    m = resetPos - offset;\n                                }\n\n                                if (lastMaskChar === resetPos) {\n                                    m -= offset;\n                                }\n                            }\n                            m += offset;\n                        } else if (valDigit === lastUntranslatedMaskChar) {\n                            // matched the last untranslated (raw) mask character that we encountered\n                            // likely an insert offset the mask character from the last entry; fall\n                            // through and only increment v\n                            maskDigitCount--;\n                            lastUntranslatedMaskChar = undefined;\n                        } else if (translation.optional) {\n                            m += offset;\n                            v -= offset;\n                        } else if (translation.fallback) {\n                            buf[addMethod](translation.fallback);\n                            m += offset;\n                            v -= offset;\n                        } else {\n                            p.invalid.push({p: v, v: valDigit, e: translation.pattern});\n                        }\n                        v += offset;\n                    } else {\n                        if (!skipMaskChars) {\n                            buf[addMethod](maskDigit);\n                        }\n\n                        if (valDigit === maskDigit) {\n                            maskDigitPosArr.push(v);\n                            v += offset;\n                        } else {\n                            lastUntranslatedMaskChar = maskDigit;\n                            maskDigitPosArr.push(v + maskDigitCount);\n                            maskDigitCount++;\n                        }\n\n                        m += offset;\n                    }\n                }\n\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\n                    buf.push(lastMaskCharDigit);\n                }\n\n                var newVal = buf.join('');\n                p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);\n                return newVal;\n            },\n            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {\n                var maskDiff = options.reverse ? newVal.length - valLen : 0;\n                p.maskDigitPosMap = {};\n                for (var i = 0; i < maskDigitPosArr.length; i++) {\n                    p.maskDigitPosMap[maskDigitPosArr[i] + maskDiff] = 1;\n                }\n            },\n            callbacks: function (e) {\n                var val = p.val(),\n                    changed = val !== oldValue,\n                    defaultArgs = [val, e, el, options],\n                    callback = function(name, criteria, args) {\n                        if (typeof options[name] === 'function' && criteria) {\n                            options[name].apply(this, args);\n                        }\n                    };\n\n                callback('onChange', changed === true, defaultArgs);\n                callback('onKeyPress', changed === true, defaultArgs);\n                callback('onComplete', val.length === mask.length, defaultArgs);\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\n            }\n        };\n\n        el = $(el);\n        var jMask = this, oldValue = p.val();\n\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\n\n        // public methods\n        jMask.mask = mask;\n        jMask.options = options;\n        jMask.remove = function() {\n            var caret = p.getCaret();\n            if (jMask.options.placeholder) {\n                el.removeAttr('placeholder');\n            }\n            if (el.data('mask-maxlength')) {\n                el.removeAttr('maxlength');\n            }\n            p.destroyEvents();\n            p.val(jMask.getCleanVal());\n            p.setCaret(caret);\n            return el;\n        };\n\n        // get value without mask\n        jMask.getCleanVal = function() {\n            return p.getMasked(true);\n        };\n\n        // get masked value without the value being in the input or element\n        jMask.getMaskedVal = function(val) {\n            return p.getMasked(false, val);\n        };\n\n        jMask.init = function(onlyMask) {\n            onlyMask = onlyMask || false;\n            options = options || {};\n\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\n\n            jMask = $.extend(true, {}, jMask, options);\n\n            if (onlyMask) {\n                p.events();\n                p.val(p.getMasked());\n            } else {\n                if (options.placeholder) {\n                    el.attr('placeholder' , options.placeholder);\n                }\n\n                // this is necessary, otherwise if the user submit the form\n                // and then press the \"back\" button, the autocomplete will erase\n                // the data. Works fine on IE9+, FF, Opera, Safari.\n                if (el.data('mask')) {\n                    el.attr('autocomplete', 'off');\n                }\n\n                // detect if is necessary let the user type freely.\n                // for is a lot faster than forEach.\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\n                    var translation = jMask.translation[mask.charAt(i)];\n                    if (translation && translation.recursive) {\n                        maxlength = false;\n                        break;\n                    }\n                }\n\n                if (maxlength) {\n                    el.attr('maxlength', mask.length).data('mask-maxlength', true);\n                }\n\n                p.destroyEvents();\n                p.events();\n\n                var caret = p.getCaret();\n                p.val(p.getMasked());\n                p.setCaret(caret);\n            }\n        };\n\n        jMask.init(!el.is('input'));\n    };\n\n    return Mask;\n});"],"file":"mask.min.js"}